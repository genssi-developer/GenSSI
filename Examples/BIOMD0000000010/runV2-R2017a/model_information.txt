**********************************************************************
* GENERATING SERIES Approach for Structural Identifiability Analysis *
**********************************************************************

Model name:     BIOMD0000000010
Matlab version: 9.1.0.441655 (R2016b)
Computer:       PCWIN64
Options:
                verbose: 1
         reportCompTime: 1
                 noRank: 0
            closeFigure: 1
                  store: 1
    problem_folder_path: 'D:\data\Tom\Research\GenSSI\Examples\BIOMD0000000010\run1'

**************
* INPUT DATA *
**************

Maximum number of derivatives for the analysis: 6

State variables (x):
    MKKK
  MKKK_P
     MKK
   MKK_P
  MKK_PP
    MAPK
  MAPK_P
 MAPK_PP
 
Vector field for autonomous dynamics (f):
                                                             (MKKK_P*V2_J1)/(KK2_J1 + MKKK_P) - (MKKK*V1_J0)/(((MAPK_PP/Ki_J0)^n_J0 + 1)*(K1_J0 + MKKK))
                                                             (MKKK*V1_J0)/(((MAPK_PP/Ki_J0)^n_J0 + 1)*(K1_J0 + MKKK)) - (MKKK_P*V2_J1)/(KK2_J1 + MKKK_P)
                                                                                      (MKK_P*V6_J5)/(KK6_J5 + MKK_P) - (MKK*MKKK_P*k3_J2)/(KK3_J2 + MKK)
           (MKK_PP*V5_J4)/(KK5_J4 + MKK_PP) - (MKK_P*V6_J5)/(KK6_J5 + MKK_P) + (MKK*MKKK_P*k3_J2)/(KK3_J2 + MKK) - (MKK_P*MKKK_P*k4_J3)/(KK4_J3 + MKK_P)
                                                                                (MKK_P*MKKK_P*k4_J3)/(KK4_J3 + MKK_P) - (MKK_PP*V5_J4)/(KK5_J4 + MKK_PP)
                                                                                (MAPK_P*V10_J9)/(KK10_J9 + MAPK_P) - (MAPK*MKK_PP*k7_J6)/(KK7_J6 + MAPK)
 (MAPK_PP*V9_J8)/(KK9_J8 + MAPK_PP) - (MAPK_P*V10_J9)/(KK10_J9 + MAPK_P) + (MAPK*MKK_PP*k7_J6)/(KK7_J6 + MAPK) - (MAPK_P*MKK_PP*k8_J7)/(KK8_J7 + MAPK_P)
                                                                            (MAPK_P*MKK_PP*k8_J7)/(KK8_J7 + MAPK_P) - (MAPK_PP*V9_J8)/(KK9_J8 + MAPK_PP)
 
Control vector (g):
 []

Initial conditions (x0):
    90
    10
   280
    10
    10
   280
    10
    10

Observables (y):
  MKKK_P
  MKK_PP
 MAPK_PP
 
Parameters considered for structural identifiability analysis:
  V1_J0
  V2_J1
  V5_J4
  V6_J5
  V9_J8
 V10_J9
 
Report inputs elapsed time: 0.059218
 
**********************************
* COMPUTATION OF LIE DERIVATIVES *
**********************************

COMPUTING LIE DERIVATIVES OF ORDER 1
.................................................................
   -> The rank of the Jacobian generated by 1 derivatives is  3.
   -> The rank of the next Jacobian is expected to be maximum 6.
.................................................................
 
 
COMPUTING LIE DERIVATIVES OF ORDER 2
   
.................................................................
   -> The rank of the Jacobian generated by 2 derivatives is 6.
 
Compute Lie derivatives elapsed time: 0.17757
 
******************************************
* COMPUTATION OF IDENTIFIABILITY TABLEAU *
******************************************

Rank of full Jacobian matrix: 6 
=> THE RANK OF THE FULL JACOBIAN IS COMPLETE, THUS AT LEAST LOCAL IDENTIFIABILITY IS GUARANTEED.

Compute tableau elapsed time: 2.5447
 
***************************************************
* COMPUTATION OF REDUCED IDENTIFIABILITY TABLEAUS *
***************************************************

Relations needed for computing parameters:
                                                                                                                                                                                                                                                                                                                                                                                  (90*V1_J0)/(((10/Ki_J0)^n_J0 + 1)*(K1_J0 + 90)) - (10*V2_J1)/(KK2_J1 + 10) - c1
                                                                                                                                                                                                                                                                                                                                                                                                        (100*k4_J3)/(KK4_J3 + 10) - (10*V5_J4)/(KK5_J4 + 10) - c2
                                                                                                                                                                                                                                                                                                                                                                                                        (100*k8_J7)/(KK8_J7 + 10) - (10*V9_J8)/(KK9_J8 + 10) - c3
 ((10*V2_J1)/(KK2_J1 + 10) - (90*V1_J0)/(((10/Ki_J0)^n_J0 + 1)*(K1_J0 + 90)))*(V2_J1/(KK2_J1 + 10) - (10*V2_J1)/(KK2_J1 + 10)^2) - c4 + (V1_J0/(((10/Ki_J0)^n_J0 + 1)*(K1_J0 + 90)) - (90*V1_J0)/(((10/Ki_J0)^n_J0 + 1)*(K1_J0 + 90)^2))*((10*V2_J1)/(KK2_J1 + 10) - (90*V1_J0)/(((10/Ki_J0)^n_J0 + 1)*(K1_J0 + 90))) + (90*V1_J0*n_J0*(10/Ki_J0)^(n_J0 - 1)*((10*V9_J8)/(KK9_J8 + 10) - (100*k8_J7)/(KK8_J7 + 10)))/(Ki_J0*((10/Ki_J0)^n_J0 + 1)^2*(K1_J0 + 90))
                                                                (V5_J4/(KK5_J4 + 10) - (10*V5_J4)/(KK5_J4 + 10)^2)*((10*V5_J4)/(KK5_J4 + 10) - (100*k4_J3)/(KK4_J3 + 10)) - c5 + ((10*k4_J3)/(KK4_J3 + 10) - (100*k4_J3)/(KK4_J3 + 10)^2)*((10*V5_J4)/(KK5_J4 + 10) - (10*V6_J5)/(KK6_J5 + 10) - (100*k4_J3)/(KK4_J3 + 10) + (2800*k3_J2)/(KK3_J2 + 280)) - (10*k4_J3*((10*V2_J1)/(KK2_J1 + 10) - (90*V1_J0)/(((10/Ki_J0)^n_J0 + 1)*(K1_J0 + 90))))/(KK4_J3 + 10)
                                                                                    (V9_J8/(KK9_J8 + 10) - (10*V9_J8)/(KK9_J8 + 10)^2)*((10*V9_J8)/(KK9_J8 + 10) - (100*k8_J7)/(KK8_J7 + 10)) - c6 - ((10*k8_J7)/(KK8_J7 + 10) - (100*k8_J7)/(KK8_J7 + 10)^2)*((10*V10_J9)/(KK10_J9 + 10) - (10*V9_J8)/(KK9_J8 + 10) + (100*k8_J7)/(KK8_J7 + 10) - (2800*k7_J6)/(KK7_J6 + 280)) - (10*k8_J7*((10*V5_J4)/(KK5_J4 + 10) - (100*k4_J3)/(KK4_J3 + 10)))/(KK8_J7 + 10)
 
Compute reduced tableau  elapsed time: 2.6681
 
*****************************************************************************************************
* DETECTION OF (DIRECT) STRUCTURALLY GLOBALLY IDENTIFIABLE PARAMETERS AND REORGANIZATION OF TABLEAU *
*****************************************************************************************************

=> STRUCTURALLY GLOBALLY IDENTIFIABLE PARAMETERS DETERMINED DIRECTLY
   (parameters corresponding to one non-zero element in the reduced identifiability tableau)
--> The parameter V5_J4 is structurally globally identifiable. It has the solution:
       V5_J4 = -(KK5_J4/10 + 1)*(c2 - (100*k4_J3)/(KK4_J3 + 10)).
--> The parameter V9_J8 is structurally globally identifiable. It has the solution:
       V9_J8 = -(KK9_J8/10 + 1)*(c3 - (100*k8_J7)/(KK8_J7 + 10)).
--> The parameter V10_J9 is structurally globally identifiable. It has the solution:
       V10_J9 = -((KK10_J9 + 10)*(c6 - ((10*k8_J7)/(KK8_J7 + 10) - (100*k8_J7)/(KK8_J7 + 10)^2)*((10*V9_J8)/(KK9_J8 + 10) - (100*k8_J7)/(KK8_J7 + 10) + (2800*k7_J6)/(KK7_J6 + 280)) - (V9_J8/(KK9_J8 + 10) - (10*V9_J8)/(KK9_J8 + 10)^2)*((10*V9_J8)/(KK9_J8 + 10) - (100*k8_J7)/(KK8_J7 + 10)) + (10*k8_J7*((10*V5_J4)/(KK5_J4 + 10) - (100*k4_J3)/(KK4_J3 + 10)))/(KK8_J7 + 10)))/(10*((10*k8_J7)/(KK8_J7 + 10) - (100*k8_J7)/(KK8_J7 + 10)^2)).
=> NO STRUCTURALLY LOCALLY IDENTIFIABLE PARAMETER COULD BE DETERMINED DIRECTLY

*******************************************************************************************************
* REMAINING PARAMETERS (APART FROM IDENTIFIABLE OR NON-IDENTIFIABLE), AND THE CORRESPONDING RELATIONS * 
*******************************************************************************************************

--> Parameters: 
 V1_J0
 V2_J1
 V6_J5
 
--> Relations: 
                                                                                                                                                                                                                                                                                                                                                                                  (90*V1_J0)/(((10/Ki_J0)^n_J0 + 1)*(K1_J0 + 90)) - (10*V2_J1)/(KK2_J1 + 10) - c1
 ((10*V2_J1)/(KK2_J1 + 10) - (90*V1_J0)/(((10/Ki_J0)^n_J0 + 1)*(K1_J0 + 90)))*(V2_J1/(KK2_J1 + 10) - (10*V2_J1)/(KK2_J1 + 10)^2) - c4 + (V1_J0/(((10/Ki_J0)^n_J0 + 1)*(K1_J0 + 90)) - (90*V1_J0)/(((10/Ki_J0)^n_J0 + 1)*(K1_J0 + 90)^2))*((10*V2_J1)/(KK2_J1 + 10) - (90*V1_J0)/(((10/Ki_J0)^n_J0 + 1)*(K1_J0 + 90))) + (90*V1_J0*n_J0*(10/Ki_J0)^(n_J0 - 1)*((10*V9_J8)/(KK9_J8 + 10) - (100*k8_J7)/(KK8_J7 + 10)))/(Ki_J0*((10/Ki_J0)^n_J0 + 1)^2*(K1_J0 + 90))
                                                                (V5_J4/(KK5_J4 + 10) - (10*V5_J4)/(KK5_J4 + 10)^2)*((10*V5_J4)/(KK5_J4 + 10) - (100*k4_J3)/(KK4_J3 + 10)) - c5 + ((10*k4_J3)/(KK4_J3 + 10) - (100*k4_J3)/(KK4_J3 + 10)^2)*((10*V5_J4)/(KK5_J4 + 10) - (10*V6_J5)/(KK6_J5 + 10) - (100*k4_J3)/(KK4_J3 + 10) + (2800*k3_J2)/(KK3_J2 + 280)) - (10*k4_J3*((10*V2_J1)/(KK2_J1 + 10) - (90*V1_J0)/(((10/Ki_J0)^n_J0 + 1)*(K1_J0 + 90))))/(KK4_J3 + 10)
 
******************************************************************
* COMPUTATION OF HIGHER ORDER REDUCED IDENTIFIABILITY TABLEAU(S) *
*  (display the group of 2/more depending parameters,            *
*           the associated algebraic relations,                  *
*           the corresponding solution (solutions))              *
******************************************************************

The group of parameters to be considered in the calculus and the corresponding relations:

--> Parameters: 
 V1_J0
 V2_J1
 
--> Relations: 
                                                                                                                                                                                                                                                                                                                                                                                  (90*V1_J0)/(((10/Ki_J0)^n_J0 + 1)*(K1_J0 + 90)) - (10*V2_J1)/(KK2_J1 + 10) - c1
 ((10*V2_J1)/(KK2_J1 + 10) - (90*V1_J0)/(((10/Ki_J0)^n_J0 + 1)*(K1_J0 + 90)))*(V2_J1/(KK2_J1 + 10) - (10*V2_J1)/(KK2_J1 + 10)^2) - c4 + (V1_J0/(((10/Ki_J0)^n_J0 + 1)*(K1_J0 + 90)) - (90*V1_J0)/(((10/Ki_J0)^n_J0 + 1)*(K1_J0 + 90)^2))*((10*V2_J1)/(KK2_J1 + 10) - (90*V1_J0)/(((10/Ki_J0)^n_J0 + 1)*(K1_J0 + 90))) + (90*V1_J0*n_J0*(10/Ki_J0)^(n_J0 - 1)*((10*V9_J8)/(KK9_J8 + 10) - (100*k8_J7)/(KK8_J7 + 10)))/(Ki_J0*((10/Ki_J0)^n_J0 + 1)^2*(K1_J0 + 90))
 
--> Symbolic solution(s) of the remaining parameters: 
--> The parameter V1_J0 has the solution/solutions: 
  -((81000000*c4)/(1/Ki_J0)^(2*n_J0) + 243000000*10^(2*n_J0)*c4 + 5400000*10^(2*n_J0)*K1_J0*c4 + 24300000*10^(2*n_J0)*KK2_J1*c4 + 24300000*10^(2*n_J0)*KK8_J7*c4 + 24300000*10^(2*n_J0)*KK9_J8*c4 + (10000*K1_J0^2*c4)/(1/Ki_J0)^(2*n_J0) - (810000*KK2_J1*c1^2)/(1/Ki_J0)^(2*n_J0) + (243000000*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + 30000*10^(2*n_J0)*K1_J0^2*c4 - 2430000*10^(2*n_J0)*KK2_J1*c1^2 + 81000000*10^(2*n_J0)*c4*(10/Ki_J0)^n_J0 + (1800000*K1_J0*c4)/(1/Ki_J0)^(2*n_J0) + (8100000*KK2_J1*c4)/(1/Ki_J0)^(2*n_J0) + (8100000*KK8_J7*c4)/(1/Ki_J0)^(2*n_J0) + (8100000*KK9_J8*c4)/(1/Ki_J0)^(2*n_J0) + 1800000*10^(2*n_J0)*K1_J0*c4*(10/Ki_J0)^n_J0 + 8100000*10^(2*n_J0)*KK2_J1*c4*(10/Ki_J0)^n_J0 + 8100000*10^(2*n_J0)*KK8_J7*c4*(10/Ki_J0)^n_J0 + 8100000*10^(2*n_J0)*KK9_J8*c4*(10/Ki_J0)^n_J0 + (30000*K1_J0^2*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) - (2430000*KK2_J1*c1^2*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (180000*K1_J0*KK2_J1*c4)/(1/Ki_J0)^(2*n_J0) + (180000*K1_J0*KK8_J7*c4)/(1/Ki_J0)^(2*n_J0) + (180000*K1_J0*KK9_J8*c4)/(1/Ki_J0)^(2*n_J0) + (810000*KK2_J1*KK8_J7*c4)/(1/Ki_J0)^(2*n_J0) + (810000*KK2_J1*KK9_J8*c4)/(1/Ki_J0)^(2*n_J0) + (810000*KK8_J7*KK9_J8*c4)/(1/Ki_J0)^(2*n_J0) - 300*10^(2*n_J0)*K1_J0^2*KK2_J1*c1^2 + 10000*10^(2*n_J0)*K1_J0^2*c4*(10/Ki_J0)^n_J0 - 810000*10^(2*n_J0)*KK2_J1*c1^2*(10/Ki_J0)^n_J0 + 540000*10^(2*n_J0)*K1_J0*KK2_J1*c4 + 540000*10^(2*n_J0)*K1_J0*KK8_J7*c4 + 540000*10^(2*n_J0)*K1_J0*KK9_J8*c4 + 2430000*10^(2*n_J0)*KK2_J1*KK8_J7*c4 + 2430000*10^(2*n_J0)*KK2_J1*KK9_J8*c4 + 2430000*10^(2*n_J0)*KK8_J7*KK9_J8*c4 - (18000*K1_J0*KK2_J1*c1^2)/(1/Ki_J0)^(2*n_J0) + (1000*K1_J0^2*KK2_J1*c4)/(1/Ki_J0)^(2*n_J0) + (1000*K1_J0^2*KK8_J7*c4)/(1/Ki_J0)^(2*n_J0) + (1000*K1_J0^2*KK9_J8*c4)/(1/Ki_J0)^(2*n_J0) - (81000*KK2_J1*KK8_J7*c1^2)/(1/Ki_J0)^(2*n_J0) - (81000*KK2_J1*KK9_J8*c1^2)/(1/Ki_J0)^(2*n_J0) + (5400000*K1_J0*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (24300000*KK2_J1*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (24300000*KK8_J7*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (24300000*KK9_J8*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) - 54000*10^(2*n_J0)*K1_J0*KK2_J1*c1^2 + 3000*10^(2*n_J0)*K1_J0^2*KK2_J1*c4 + 3000*10^(2*n_J0)*K1_J0^2*KK8_J7*c4 + 3000*10^(2*n_J0)*K1_J0^2*KK9_J8*c4 - 243000*10^(2*n_J0)*KK2_J1*KK8_J7*c1^2 - 243000*10^(2*n_J0)*KK2_J1*KK9_J8*c1^2 - (100*K1_J0^2*KK2_J1*c1^2)/(1/Ki_J0)^(2*n_J0) + (540000*K1_J0*KK2_J1*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (540000*K1_J0*KK8_J7*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (540000*K1_J0*KK9_J8*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (2430000*KK2_J1*KK8_J7*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (2430000*KK2_J1*KK9_J8*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (2430000*KK8_J7*KK9_J8*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) - 100*10^(2*n_J0)*K1_J0^2*KK2_J1*c1^2*(10/Ki_J0)^n_J0 - 5400*10^(2*n_J0)*K1_J0*KK2_J1*KK8_J7*c1^2 + 300*10^(2*n_J0)*K1_J0^2*KK2_J1*KK8_J7*c4 - 5400*10^(2*n_J0)*K1_J0*KK2_J1*KK9_J8*c1^2 + 300*10^(2*n_J0)*K1_J0^2*KK2_J1*KK9_J8*c4 + 300*10^(2*n_J0)*K1_J0^2*KK8_J7*KK9_J8*c4 - 24300*10^(2*n_J0)*KK2_J1*KK8_J7*KK9_J8*c1^2 - (10*K1_J0^2*KK2_J1*KK8_J7*c1^2)/(1/Ki_J0)^(2*n_J0) - (10*K1_J0^2*KK2_J1*KK9_J8*c1^2)/(1/Ki_J0)^(2*n_J0) + 180000*10^(2*n_J0)*K1_J0*KK2_J1*c4*(10/Ki_J0)^n_J0 + 180000*10^(2*n_J0)*K1_J0*KK8_J7*c4*(10/Ki_J0)^n_J0 + 180000*10^(2*n_J0)*K1_J0*KK9_J8*c4*(10/Ki_J0)^n_J0 + 810000*10^(2*n_J0)*KK2_J1*KK8_J7*c4*(10/Ki_J0)^n_J0 + 810000*10^(2*n_J0)*KK2_J1*KK9_J8*c4*(10/Ki_J0)^n_J0 + 810000*10^(2*n_J0)*KK8_J7*KK9_J8*c4*(10/Ki_J0)^n_J0 - (54000*K1_J0*KK2_J1*c1^2*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (3000*K1_J0^2*KK2_J1*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (3000*K1_J0^2*KK8_J7*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (3000*K1_J0^2*KK9_J8*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) - (243000*KK2_J1*KK8_J7*c1^2*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) - (243000*KK2_J1*KK9_J8*c1^2*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (18000*K1_J0*KK2_J1*KK8_J7*c4)/(1/Ki_J0)^(2*n_J0) + (18000*K1_J0*KK2_J1*KK9_J8*c4)/(1/Ki_J0)^(2*n_J0) + (18000*K1_J0*KK8_J7*KK9_J8*c4)/(1/Ki_J0)^(2*n_J0) + (81000*KK2_J1*KK8_J7*KK9_J8*c4)/(1/Ki_J0)^(2*n_J0) - 30*10^(2*n_J0)*K1_J0^2*KK2_J1*KK8_J7*c1^2 - 30*10^(2*n_J0)*K1_J0^2*KK2_J1*KK9_J8*c1^2 - 18000*10^(2*n_J0)*K1_J0*KK2_J1*c1^2*(10/Ki_J0)^n_J0 + 1000*10^(2*n_J0)*K1_J0^2*KK2_J1*c4*(10/Ki_J0)^n_J0 + 1000*10^(2*n_J0)*K1_J0^2*KK8_J7*c4*(10/Ki_J0)^n_J0 + 1000*10^(2*n_J0)*K1_J0^2*KK9_J8*c4*(10/Ki_J0)^n_J0 - 81000*10^(2*n_J0)*KK2_J1*KK8_J7*c1^2*(10/Ki_J0)^n_J0 - 81000*10^(2*n_J0)*KK2_J1*KK9_J8*c1^2*(10/Ki_J0)^n_J0 - (300*K1_J0^2*KK2_J1*c1^2*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + 54000*10^(2*n_J0)*K1_J0*KK2_J1*KK8_J7*c4 + 54000*10^(2*n_J0)*K1_J0*KK2_J1*KK9_J8*c4 + 54000*10^(2*n_J0)*K1_J0*KK8_J7*KK9_J8*c4 + 243000*10^(2*n_J0)*KK2_J1*KK8_J7*KK9_J8*c4 - (1800*K1_J0*KK2_J1*KK8_J7*c1^2)/(1/Ki_J0)^(2*n_J0) + (100*K1_J0^2*KK2_J1*KK8_J7*c4)/(1/Ki_J0)^(2*n_J0) - (1800*K1_J0*KK2_J1*KK9_J8*c1^2)/(1/Ki_J0)^(2*n_J0) + (100*K1_J0^2*KK2_J1*KK9_J8*c4)/(1/Ki_J0)^(2*n_J0) + (100*K1_J0^2*KK8_J7*KK9_J8*c4)/(1/Ki_J0)^(2*n_J0) - (8100*KK2_J1*KK8_J7*KK9_J8*c1^2)/(1/Ki_J0)^(2*n_J0) - 1800*10^(2*n_J0)*K1_J0*KK2_J1*KK8_J7*c1^2*(10/Ki_J0)^n_J0 + 100*10^(2*n_J0)*K1_J0^2*KK2_J1*KK8_J7*c4*(10/Ki_J0)^n_J0 - 1800*10^(2*n_J0)*K1_J0*KK2_J1*KK9_J8*c1^2*(10/Ki_J0)^n_J0 + 100*10^(2*n_J0)*K1_J0^2*KK2_J1*KK9_J8*c4*(10/Ki_J0)^n_J0 + 100*10^(2*n_J0)*K1_J0^2*KK8_J7*KK9_J8*c4*(10/Ki_J0)^n_J0 - 8100*10^(2*n_J0)*KK2_J1*KK8_J7*KK9_J8*c1^2*(10/Ki_J0)^n_J0 - (30*K1_J0^2*KK2_J1*KK8_J7*c1^2*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) - (30*K1_J0^2*KK2_J1*KK9_J8*c1^2*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + 5400*10^(2*n_J0)*K1_J0*KK2_J1*KK8_J7*KK9_J8*c4 - (180*K1_J0*KK2_J1*KK8_J7*KK9_J8*c1^2)/(1/Ki_J0)^(2*n_J0) + (10*K1_J0^2*KK2_J1*KK8_J7*KK9_J8*c4)/(1/Ki_J0)^(2*n_J0) + (54000*K1_J0*KK2_J1*KK8_J7*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (54000*K1_J0*KK2_J1*KK9_J8*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (54000*K1_J0*KK8_J7*KK9_J8*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (243000*KK2_J1*KK8_J7*KK9_J8*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) - 10*10^(2*n_J0)*K1_J0^2*KK2_J1*KK8_J7*c1^2*(10/Ki_J0)^n_J0 - 10*10^(2*n_J0)*K1_J0^2*KK2_J1*KK9_J8*c1^2*(10/Ki_J0)^n_J0 - 540*10^(2*n_J0)*K1_J0*KK2_J1*KK8_J7*KK9_J8*c1^2 + 30*10^(2*n_J0)*K1_J0^2*KK2_J1*KK8_J7*KK9_J8*c4 - (K1_J0^2*KK2_J1*KK8_J7*KK9_J8*c1^2)/(1/Ki_J0)^(2*n_J0) + 18000*10^(2*n_J0)*K1_J0*KK2_J1*KK8_J7*c4*(10/Ki_J0)^n_J0 + 18000*10^(2*n_J0)*K1_J0*KK2_J1*KK9_J8*c4*(10/Ki_J0)^n_J0 + 18000*10^(2*n_J0)*K1_J0*KK8_J7*KK9_J8*c4*(10/Ki_J0)^n_J0 + 81000*10^(2*n_J0)*KK2_J1*KK8_J7*KK9_J8*c4*(10/Ki_J0)^n_J0 - (5400*K1_J0*KK2_J1*KK8_J7*c1^2*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (300*K1_J0^2*KK2_J1*KK8_J7*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) - (5400*K1_J0*KK2_J1*KK9_J8*c1^2*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (300*K1_J0^2*KK2_J1*KK9_J8*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (300*K1_J0^2*KK8_J7*KK9_J8*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) - (24300*KK2_J1*KK8_J7*KK9_J8*c1^2*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (1800*K1_J0*KK2_J1*KK8_J7*KK9_J8*c4)/(1/Ki_J0)^(2*n_J0) - 3*10^(2*n_J0)*K1_J0^2*KK2_J1*KK8_J7*KK9_J8*c1^2 - 180*10^(2*n_J0)*K1_J0*KK2_J1*KK8_J7*KK9_J8*c1^2*(10/Ki_J0)^n_J0 + 10*10^(2*n_J0)*K1_J0^2*KK2_J1*KK8_J7*KK9_J8*c4*(10/Ki_J0)^n_J0 - (3*K1_J0^2*KK2_J1*KK8_J7*KK9_J8*c1^2*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (5400*K1_J0*KK2_J1*KK8_J7*KK9_J8*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) - 10^(2*n_J0)*K1_J0^2*KK2_J1*KK8_J7*KK9_J8*c1^2*(10/Ki_J0)^n_J0 + 1800*10^(2*n_J0)*K1_J0*KK2_J1*KK8_J7*KK9_J8*c4*(10/Ki_J0)^n_J0 - (540*K1_J0*KK2_J1*KK8_J7*KK9_J8*c1^2*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (30*K1_J0^2*KK2_J1*KK8_J7*KK9_J8*c4*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0))/(100*(100*10^(2*n_J0)*K1_J0*c1 + 8100*10^(2*n_J0)*KK2_J1*c1 + (100*K1_J0*c1)/(1/Ki_J0)^(2*n_J0) + (8100*KK2_J1*c1)/(1/Ki_J0)^(2*n_J0) + (100*K1_J0*KK2_J1*c1)/(1/Ki_J0)^(2*n_J0) + (10*K1_J0*KK8_J7*c1)/(1/Ki_J0)^(2*n_J0) + (10*K1_J0*KK9_J8*c1)/(1/Ki_J0)^(2*n_J0) + (810*KK2_J1*KK8_J7*c1)/(1/Ki_J0)^(2*n_J0) + (810*KK2_J1*KK9_J8*c1)/(1/Ki_J0)^(2*n_J0) + 100*10^(2*n_J0)*K1_J0*KK2_J1*c1 + 10*10^(2*n_J0)*K1_J0*KK8_J7*c1 + 10*10^(2*n_J0)*K1_J0*KK9_J8*c1 + 810*10^(2*n_J0)*KK2_J1*KK8_J7*c1 + 810*10^(2*n_J0)*KK2_J1*KK9_J8*c1 + (200*K1_J0*c1*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (16200*KK2_J1*c1*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) - (81000*10^n_J0*V9_J8*n_J0)/(1/Ki_J0)^n_J0 + (810000*10^n_J0*k8_J7*n_J0)/(1/Ki_J0)^n_J0 + (200*K1_J0*KK2_J1*c1*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (20*K1_J0*KK8_J7*c1*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (20*K1_J0*KK9_J8*c1*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (1620*KK2_J1*KK8_J7*c1*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (1620*KK2_J1*KK9_J8*c1*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) - (900*10^n_J0*K1_J0*V9_J8*n_J0)/(1/Ki_J0)^n_J0 - (8100*10^n_J0*KK2_J1*V9_J8*n_J0)/(1/Ki_J0)^n_J0 - (8100*10^n_J0*KK8_J7*V9_J8*n_J0)/(1/Ki_J0)^n_J0 + (9000*10^n_J0*K1_J0*k8_J7*n_J0)/(1/Ki_J0)^n_J0 + (81000*10^n_J0*KK2_J1*k8_J7*n_J0)/(1/Ki_J0)^n_J0 + (81000*10^n_J0*KK9_J8*k8_J7*n_J0)/(1/Ki_J0)^n_J0 + (10*K1_J0*KK2_J1*KK8_J7*c1)/(1/Ki_J0)^(2*n_J0) + (10*K1_J0*KK2_J1*KK9_J8*c1)/(1/Ki_J0)^(2*n_J0) + (K1_J0*KK8_J7*KK9_J8*c1)/(1/Ki_J0)^(2*n_J0) + (81*KK2_J1*KK8_J7*KK9_J8*c1)/(1/Ki_J0)^(2*n_J0) - (81000*10^n_J0*V9_J8*n_J0*(10/Ki_J0)^n_J0)/(1/Ki_J0)^n_J0 + (810000*10^n_J0*k8_J7*n_J0*(10/Ki_J0)^n_J0)/(1/Ki_J0)^n_J0 + 10*10^(2*n_J0)*K1_J0*KK2_J1*KK8_J7*c1 + 10*10^(2*n_J0)*K1_J0*KK2_J1*KK9_J8*c1 + 10^(2*n_J0)*K1_J0*KK8_J7*KK9_J8*c1 + 81*10^(2*n_J0)*KK2_J1*KK8_J7*KK9_J8*c1 + (9000*10^n_J0*K1_J0*k8_J7*n_J0*(10/Ki_J0)^n_J0)/(1/Ki_J0)^n_J0 + (81000*10^n_J0*KK2_J1*k8_J7*n_J0*(10/Ki_J0)^n_J0)/(1/Ki_J0)^n_J0 + (81000*10^n_J0*KK9_J8*k8_J7*n_J0*(10/Ki_J0)^n_J0)/(1/Ki_J0)^n_J0 + 10^(2*n_J0)*K1_J0*KK2_J1*KK8_J7*KK9_J8*c1 + (20*K1_J0*KK2_J1*KK8_J7*c1*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (20*K1_J0*KK2_J1*KK9_J8*c1*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (2*K1_J0*KK8_J7*KK9_J8*c1*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) + (162*KK2_J1*KK8_J7*KK9_J8*c1*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) - (90*10^n_J0*K1_J0*KK2_J1*V9_J8*n_J0)/(1/Ki_J0)^n_J0 - (90*10^n_J0*K1_J0*KK8_J7*V9_J8*n_J0)/(1/Ki_J0)^n_J0 - (810*10^n_J0*KK2_J1*KK8_J7*V9_J8*n_J0)/(1/Ki_J0)^n_J0 + (900*10^n_J0*K1_J0*KK2_J1*k8_J7*n_J0)/(1/Ki_J0)^n_J0 + (900*10^n_J0*K1_J0*KK9_J8*k8_J7*n_J0)/(1/Ki_J0)^n_J0 + (8100*10^n_J0*KK2_J1*KK9_J8*k8_J7*n_J0)/(1/Ki_J0)^n_J0 + (K1_J0*KK2_J1*KK8_J7*KK9_J8*c1)/(1/Ki_J0)^(2*n_J0) - (900*10^n_J0*K1_J0*V9_J8*n_J0*(10/Ki_J0)^n_J0)/(1/Ki_J0)^n_J0 - (8100*10^n_J0*KK2_J1*V9_J8*n_J0*(10/Ki_J0)^n_J0)/(1/Ki_J0)^n_J0 - (8100*10^n_J0*KK8_J7*V9_J8*n_J0*(10/Ki_J0)^n_J0)/(1/Ki_J0)^n_J0 - (90*10^n_J0*K1_J0*KK2_J1*V9_J8*n_J0*(10/Ki_J0)^n_J0)/(1/Ki_J0)^n_J0 - (90*10^n_J0*K1_J0*KK8_J7*V9_J8*n_J0*(10/Ki_J0)^n_J0)/(1/Ki_J0)^n_J0 - (810*10^n_J0*KK2_J1*KK8_J7*V9_J8*n_J0*(10/Ki_J0)^n_J0)/(1/Ki_J0)^n_J0 + (900*10^n_J0*K1_J0*KK2_J1*k8_J7*n_J0*(10/Ki_J0)^n_J0)/(1/Ki_J0)^n_J0 + (900*10^n_J0*K1_J0*KK9_J8*k8_J7*n_J0*(10/Ki_J0)^n_J0)/(1/Ki_J0)^n_J0 + (8100*10^n_J0*KK2_J1*KK9_J8*k8_J7*n_J0*(10/Ki_J0)^n_J0)/(1/Ki_J0)^n_J0 + (2*K1_J0*KK2_J1*KK8_J7*KK9_J8*c1*(10/Ki_J0)^n_J0)/(1/Ki_J0)^(2*n_J0) - (9*10^n_J0*K1_J0*KK2_J1*KK8_J7*V9_J8*n_J0)/(1/Ki_J0)^n_J0 + (90*10^n_J0*K1_J0*KK2_J1*KK9_J8*k8_J7*n_J0)/(1/Ki_J0)^n_J0 - (9*10^n_J0*K1_J0*KK2_J1*KK8_J7*V9_J8*n_J0*(10/Ki_J0)^n_J0)/(1/Ki_J0)^n_J0 + (90*10^n_J0*K1_J0*KK2_J1*KK9_J8*k8_J7*n_J0*(10/Ki_J0)^n_J0)/(1/Ki_J0)^n_J0))
--> The parameter V2_J1 has the solution/solutions: 
  -(81000000*c4 + 900000*K1_J0*c4 + 16200000*KK2_J1*c4 + 8100000*KK8_J7*c4 + 8100000*KK9_J8*c4 + 10000*K1_J0*c1^2 + 810000*KK2_J1^2*c4 + 162000000*c4*(10/Ki_J0)^n_J0 + 100*K1_J0*KK2_J1^2*c1^2 + 20000*K1_J0*c1^2*(10/Ki_J0)^n_J0 + 1620000*KK2_J1^2*c4*(10/Ki_J0)^n_J0 + 180000*K1_J0*KK2_J1*c4 + 90000*K1_J0*KK8_J7*c4 + 90000*K1_J0*KK9_J8*c4 + 1620000*KK2_J1*KK8_J7*c4 + 1620000*KK2_J1*KK9_J8*c4 + 810000*KK8_J7*KK9_J8*c4 + 2000*K1_J0*KK2_J1*c1^2 + 9000*K1_J0*KK2_J1^2*c4 + 1000*K1_J0*KK8_J7*c1^2 + 1000*K1_J0*KK9_J8*c1^2 + 81000*KK2_J1^2*KK8_J7*c4 + 81000*KK2_J1^2*KK9_J8*c4 + 81000000*10^(2*n_J0)*c4*(1/Ki_J0)^(2*n_J0) + 1800000*K1_J0*c4*(10/Ki_J0)^n_J0 + 32400000*KK2_J1*c4*(10/Ki_J0)^n_J0 + 16200000*KK8_J7*c4*(10/Ki_J0)^n_J0 + 16200000*KK9_J8*c4*(10/Ki_J0)^n_J0 + 200*K1_J0*KK2_J1*KK8_J7*c1^2 + 900*K1_J0*KK2_J1^2*KK8_J7*c4 + 200*K1_J0*KK2_J1*KK9_J8*c1^2 + 900*K1_J0*KK2_J1^2*KK9_J8*c4 + 100*K1_J0*KK8_J7*KK9_J8*c1^2 + 8100*KK2_J1^2*KK8_J7*KK9_J8*c4 + 900000*10^(2*n_J0)*K1_J0*c4*(1/Ki_J0)^(2*n_J0) + 16200000*10^(2*n_J0)*KK2_J1*c4*(1/Ki_J0)^(2*n_J0) + 8100000*10^(2*n_J0)*KK8_J7*c4*(1/Ki_J0)^(2*n_J0) + 8100000*10^(2*n_J0)*KK9_J8*c4*(1/Ki_J0)^(2*n_J0) + 360000*K1_J0*KK2_J1*c4*(10/Ki_J0)^n_J0 + 180000*K1_J0*KK8_J7*c4*(10/Ki_J0)^n_J0 + 180000*K1_J0*KK9_J8*c4*(10/Ki_J0)^n_J0 + 3240000*KK2_J1*KK8_J7*c4*(10/Ki_J0)^n_J0 + 3240000*KK2_J1*KK9_J8*c4*(10/Ki_J0)^n_J0 + 1620000*KK8_J7*KK9_J8*c4*(10/Ki_J0)^n_J0 + 10*K1_J0*KK2_J1^2*KK8_J7*c1^2 + 10*K1_J0*KK2_J1^2*KK9_J8*c1^2 + 10000*10^(2*n_J0)*K1_J0*c1^2*(1/Ki_J0)^(2*n_J0) + 810000*10^(2*n_J0)*KK2_J1^2*c4*(1/Ki_J0)^(2*n_J0) + 4000*K1_J0*KK2_J1*c1^2*(10/Ki_J0)^n_J0 + 18000*K1_J0*KK2_J1^2*c4*(10/Ki_J0)^n_J0 + 2000*K1_J0*KK8_J7*c1^2*(10/Ki_J0)^n_J0 + 2000*K1_J0*KK9_J8*c1^2*(10/Ki_J0)^n_J0 + 162000*KK2_J1^2*KK8_J7*c4*(10/Ki_J0)^n_J0 + 162000*KK2_J1^2*KK9_J8*c4*(10/Ki_J0)^n_J0 + 18000*K1_J0*KK2_J1*KK8_J7*c4 + 18000*K1_J0*KK2_J1*KK9_J8*c4 + 9000*K1_J0*KK8_J7*KK9_J8*c4 + 162000*KK2_J1*KK8_J7*KK9_J8*c4 + 200*K1_J0*KK2_J1^2*c1^2*(10/Ki_J0)^n_J0 + 100*10^(2*n_J0)*K1_J0*KK2_J1^2*c1^2*(1/Ki_J0)^(2*n_J0) + 20*K1_J0*KK2_J1^2*KK8_J7*c1^2*(10/Ki_J0)^n_J0 + 20*K1_J0*KK2_J1^2*KK9_J8*c1^2*(10/Ki_J0)^n_J0 + 20*K1_J0*KK2_J1*KK8_J7*KK9_J8*c1^2 + 90*K1_J0*KK2_J1^2*KK8_J7*KK9_J8*c4 + 180000*10^(2*n_J0)*K1_J0*KK2_J1*c4*(1/Ki_J0)^(2*n_J0) + 90000*10^(2*n_J0)*K1_J0*KK8_J7*c4*(1/Ki_J0)^(2*n_J0) + 90000*10^(2*n_J0)*K1_J0*KK9_J8*c4*(1/Ki_J0)^(2*n_J0) + 1620000*10^(2*n_J0)*KK2_J1*KK8_J7*c4*(1/Ki_J0)^(2*n_J0) + 1620000*10^(2*n_J0)*KK2_J1*KK9_J8*c4*(1/Ki_J0)^(2*n_J0) + 810000*10^(2*n_J0)*KK8_J7*KK9_J8*c4*(1/Ki_J0)^(2*n_J0) + 36000*K1_J0*KK2_J1*KK8_J7*c4*(10/Ki_J0)^n_J0 + 36000*K1_J0*KK2_J1*KK9_J8*c4*(10/Ki_J0)^n_J0 + 18000*K1_J0*KK8_J7*KK9_J8*c4*(10/Ki_J0)^n_J0 + 324000*KK2_J1*KK8_J7*KK9_J8*c4*(10/Ki_J0)^n_J0 + K1_J0*KK2_J1^2*KK8_J7*KK9_J8*c1^2 + 2000*10^(2*n_J0)*K1_J0*KK2_J1*c1^2*(1/Ki_J0)^(2*n_J0) + 9000*10^(2*n_J0)*K1_J0*KK2_J1^2*c4*(1/Ki_J0)^(2*n_J0) + 1000*10^(2*n_J0)*K1_J0*KK8_J7*c1^2*(1/Ki_J0)^(2*n_J0) + 1000*10^(2*n_J0)*K1_J0*KK9_J8*c1^2*(1/Ki_J0)^(2*n_J0) + 81000*10^(2*n_J0)*KK2_J1^2*KK8_J7*c4*(1/Ki_J0)^(2*n_J0) + 81000*10^(2*n_J0)*KK2_J1^2*KK9_J8*c4*(1/Ki_J0)^(2*n_J0) - 8100000*10^n_J0*V9_J8*c1*n_J0*(1/Ki_J0)^n_J0 + 400*K1_J0*KK2_J1*KK8_J7*c1^2*(10/Ki_J0)^n_J0 + 1800*K1_J0*KK2_J1^2*KK8_J7*c4*(10/Ki_J0)^n_J0 + 400*K1_J0*KK2_J1*KK9_J8*c1^2*(10/Ki_J0)^n_J0 + 1800*K1_J0*KK2_J1^2*KK9_J8*c4*(10/Ki_J0)^n_J0 + 200*K1_J0*KK8_J7*KK9_J8*c1^2*(10/Ki_J0)^n_J0 + 16200*KK2_J1^2*KK8_J7*KK9_J8*c4*(10/Ki_J0)^n_J0 + 81000000*10^n_J0*c1*k8_J7*n_J0*(1/Ki_J0)^n_J0 + 1800*K1_J0*KK2_J1*KK8_J7*KK9_J8*c4 + 200*10^(2*n_J0)*K1_J0*KK2_J1*KK8_J7*c1^2*(1/Ki_J0)^(2*n_J0) + 900*10^(2*n_J0)*K1_J0*KK2_J1^2*KK8_J7*c4*(1/Ki_J0)^(2*n_J0) + 200*10^(2*n_J0)*K1_J0*KK2_J1*KK9_J8*c1^2*(1/Ki_J0)^(2*n_J0) + 900*10^(2*n_J0)*K1_J0*KK2_J1^2*KK9_J8*c4*(1/Ki_J0)^(2*n_J0) + 100*10^(2*n_J0)*K1_J0*KK8_J7*KK9_J8*c1^2*(1/Ki_J0)^(2*n_J0) + 8100*10^(2*n_J0)*KK2_J1^2*KK8_J7*KK9_J8*c4*(1/Ki_J0)^(2*n_J0) - 90000*10^n_J0*K1_J0*V9_J8*c1*n_J0*(1/Ki_J0)^n_J0 - 1620000*10^n_J0*KK2_J1*V9_J8*c1*n_J0*(1/Ki_J0)^n_J0 - 810000*10^n_J0*KK8_J7*V9_J8*c1*n_J0*(1/Ki_J0)^n_J0 + 40*K1_J0*KK2_J1*KK8_J7*KK9_J8*c1^2*(10/Ki_J0)^n_J0 + 180*K1_J0*KK2_J1^2*KK8_J7*KK9_J8*c4*(10/Ki_J0)^n_J0 + 900000*10^n_J0*K1_J0*c1*k8_J7*n_J0*(1/Ki_J0)^n_J0 + 16200000*10^n_J0*KK2_J1*c1*k8_J7*n_J0*(1/Ki_J0)^n_J0 + 8100000*10^n_J0*KK9_J8*c1*k8_J7*n_J0*(1/Ki_J0)^n_J0 + 10*10^(2*n_J0)*K1_J0*KK2_J1^2*KK8_J7*c1^2*(1/Ki_J0)^(2*n_J0) + 10*10^(2*n_J0)*K1_J0*KK2_J1^2*KK9_J8*c1^2*(1/Ki_J0)^(2*n_J0) - 81000*10^n_J0*KK2_J1^2*V9_J8*c1*n_J0*(1/Ki_J0)^n_J0 + 2*K1_J0*KK2_J1^2*KK8_J7*KK9_J8*c1^2*(10/Ki_J0)^n_J0 + 810000*10^n_J0*KK2_J1^2*c1*k8_J7*n_J0*(1/Ki_J0)^n_J0 - 8100000*10^n_J0*V9_J8*c1*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 18000*10^(2*n_J0)*K1_J0*KK2_J1*KK8_J7*c4*(1/Ki_J0)^(2*n_J0) + 18000*10^(2*n_J0)*K1_J0*KK2_J1*KK9_J8*c4*(1/Ki_J0)^(2*n_J0) + 9000*10^(2*n_J0)*K1_J0*KK8_J7*KK9_J8*c4*(1/Ki_J0)^(2*n_J0) + 162000*10^(2*n_J0)*KK2_J1*KK8_J7*KK9_J8*c4*(1/Ki_J0)^(2*n_J0) + 81000000*10^n_J0*c1*k8_J7*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 3600*K1_J0*KK2_J1*KK8_J7*KK9_J8*c4*(10/Ki_J0)^n_J0 + 900000*10^n_J0*K1_J0*c1*k8_J7*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 16200000*10^n_J0*KK2_J1*c1*k8_J7*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 8100000*10^n_J0*KK9_J8*c1*k8_J7*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 - 81000*10^n_J0*KK2_J1^2*V9_J8*c1*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 20*10^(2*n_J0)*K1_J0*KK2_J1*KK8_J7*KK9_J8*c1^2*(1/Ki_J0)^(2*n_J0) + 90*10^(2*n_J0)*K1_J0*KK2_J1^2*KK8_J7*KK9_J8*c4*(1/Ki_J0)^(2*n_J0) - 18000*10^n_J0*K1_J0*KK2_J1*V9_J8*c1*n_J0*(1/Ki_J0)^n_J0 - 9000*10^n_J0*K1_J0*KK8_J7*V9_J8*c1*n_J0*(1/Ki_J0)^n_J0 - 162000*10^n_J0*KK2_J1*KK8_J7*V9_J8*c1*n_J0*(1/Ki_J0)^n_J0 + 810000*10^n_J0*KK2_J1^2*c1*k8_J7*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 180000*10^n_J0*K1_J0*KK2_J1*c1*k8_J7*n_J0*(1/Ki_J0)^n_J0 + 90000*10^n_J0*K1_J0*KK9_J8*c1*k8_J7*n_J0*(1/Ki_J0)^n_J0 + 1620000*10^n_J0*KK2_J1*KK9_J8*c1*k8_J7*n_J0*(1/Ki_J0)^n_J0 + 10^(2*n_J0)*K1_J0*KK2_J1^2*KK8_J7*KK9_J8*c1^2*(1/Ki_J0)^(2*n_J0) - 900*10^n_J0*K1_J0*KK2_J1^2*V9_J8*c1*n_J0*(1/Ki_J0)^n_J0 - 8100*10^n_J0*KK2_J1^2*KK8_J7*V9_J8*c1*n_J0*(1/Ki_J0)^n_J0 + 9000*10^n_J0*K1_J0*KK2_J1^2*c1*k8_J7*n_J0*(1/Ki_J0)^n_J0 + 81000*10^n_J0*KK2_J1^2*KK9_J8*c1*k8_J7*n_J0*(1/Ki_J0)^n_J0 - 90000*10^n_J0*K1_J0*V9_J8*c1*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 - 1620000*10^n_J0*KK2_J1*V9_J8*c1*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 - 810000*10^n_J0*KK8_J7*V9_J8*c1*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 1800*10^(2*n_J0)*K1_J0*KK2_J1*KK8_J7*KK9_J8*c4*(1/Ki_J0)^(2*n_J0) - 90*10^n_J0*K1_J0*KK2_J1^2*KK8_J7*V9_J8*c1*n_J0*(1/Ki_J0)^n_J0 + 900*10^n_J0*K1_J0*KK2_J1^2*KK9_J8*c1*k8_J7*n_J0*(1/Ki_J0)^n_J0 - 18000*10^n_J0*K1_J0*KK2_J1*V9_J8*c1*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 - 9000*10^n_J0*K1_J0*KK8_J7*V9_J8*c1*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 - 162000*10^n_J0*KK2_J1*KK8_J7*V9_J8*c1*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 180000*10^n_J0*K1_J0*KK2_J1*c1*k8_J7*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 90000*10^n_J0*K1_J0*KK9_J8*c1*k8_J7*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 1620000*10^n_J0*KK2_J1*KK9_J8*c1*k8_J7*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 - 900*10^n_J0*K1_J0*KK2_J1^2*V9_J8*c1*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 - 8100*10^n_J0*KK2_J1^2*KK8_J7*V9_J8*c1*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 - 1800*10^n_J0*K1_J0*KK2_J1*KK8_J7*V9_J8*c1*n_J0*(1/Ki_J0)^n_J0 + 9000*10^n_J0*K1_J0*KK2_J1^2*c1*k8_J7*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 81000*10^n_J0*KK2_J1^2*KK9_J8*c1*k8_J7*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 18000*10^n_J0*K1_J0*KK2_J1*KK9_J8*c1*k8_J7*n_J0*(1/Ki_J0)^n_J0 - 1800*10^n_J0*K1_J0*KK2_J1*KK8_J7*V9_J8*c1*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 18000*10^n_J0*K1_J0*KK2_J1*KK9_J8*c1*k8_J7*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 - 90*10^n_J0*K1_J0*KK2_J1^2*KK8_J7*V9_J8*c1*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 900*10^n_J0*K1_J0*KK2_J1^2*KK9_J8*c1*k8_J7*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0)/(100*(100*K1_J0*c1 + 8100*KK2_J1*c1 + 100*K1_J0*KK2_J1*c1 + 10*K1_J0*KK8_J7*c1 + 10*K1_J0*KK9_J8*c1 + 810*KK2_J1*KK8_J7*c1 + 810*KK2_J1*KK9_J8*c1 + 200*K1_J0*c1*(10/Ki_J0)^n_J0 + 16200*KK2_J1*c1*(10/Ki_J0)^n_J0 + 100*10^(2*n_J0)*K1_J0*c1*(1/Ki_J0)^(2*n_J0) + 8100*10^(2*n_J0)*KK2_J1*c1*(1/Ki_J0)^(2*n_J0) + 200*K1_J0*KK2_J1*c1*(10/Ki_J0)^n_J0 + 20*K1_J0*KK8_J7*c1*(10/Ki_J0)^n_J0 + 20*K1_J0*KK9_J8*c1*(10/Ki_J0)^n_J0 + 1620*KK2_J1*KK8_J7*c1*(10/Ki_J0)^n_J0 + 1620*KK2_J1*KK9_J8*c1*(10/Ki_J0)^n_J0 - 81000*10^n_J0*V9_J8*n_J0*(1/Ki_J0)^n_J0 + 810000*10^n_J0*k8_J7*n_J0*(1/Ki_J0)^n_J0 + 10*K1_J0*KK2_J1*KK8_J7*c1 + 10*K1_J0*KK2_J1*KK9_J8*c1 + K1_J0*KK8_J7*KK9_J8*c1 + 81*KK2_J1*KK8_J7*KK9_J8*c1 - 81000*10^n_J0*V9_J8*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 810000*10^n_J0*k8_J7*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 100*10^(2*n_J0)*K1_J0*KK2_J1*c1*(1/Ki_J0)^(2*n_J0) + 10*10^(2*n_J0)*K1_J0*KK8_J7*c1*(1/Ki_J0)^(2*n_J0) + 10*10^(2*n_J0)*K1_J0*KK9_J8*c1*(1/Ki_J0)^(2*n_J0) + 810*10^(2*n_J0)*KK2_J1*KK8_J7*c1*(1/Ki_J0)^(2*n_J0) + 810*10^(2*n_J0)*KK2_J1*KK9_J8*c1*(1/Ki_J0)^(2*n_J0) + 20*K1_J0*KK2_J1*KK8_J7*c1*(10/Ki_J0)^n_J0 + 20*K1_J0*KK2_J1*KK9_J8*c1*(10/Ki_J0)^n_J0 + 2*K1_J0*KK8_J7*KK9_J8*c1*(10/Ki_J0)^n_J0 + 162*KK2_J1*KK8_J7*KK9_J8*c1*(10/Ki_J0)^n_J0 - 900*10^n_J0*K1_J0*V9_J8*n_J0*(1/Ki_J0)^n_J0 - 8100*10^n_J0*KK2_J1*V9_J8*n_J0*(1/Ki_J0)^n_J0 - 8100*10^n_J0*KK8_J7*V9_J8*n_J0*(1/Ki_J0)^n_J0 + 9000*10^n_J0*K1_J0*k8_J7*n_J0*(1/Ki_J0)^n_J0 + 81000*10^n_J0*KK2_J1*k8_J7*n_J0*(1/Ki_J0)^n_J0 + 81000*10^n_J0*KK9_J8*k8_J7*n_J0*(1/Ki_J0)^n_J0 + K1_J0*KK2_J1*KK8_J7*KK9_J8*c1 - 90*10^n_J0*K1_J0*KK2_J1*V9_J8*n_J0*(1/Ki_J0)^n_J0 - 90*10^n_J0*K1_J0*KK8_J7*V9_J8*n_J0*(1/Ki_J0)^n_J0 - 810*10^n_J0*KK2_J1*KK8_J7*V9_J8*n_J0*(1/Ki_J0)^n_J0 + 900*10^n_J0*K1_J0*KK2_J1*k8_J7*n_J0*(1/Ki_J0)^n_J0 + 900*10^n_J0*K1_J0*KK9_J8*k8_J7*n_J0*(1/Ki_J0)^n_J0 + 8100*10^n_J0*KK2_J1*KK9_J8*k8_J7*n_J0*(1/Ki_J0)^n_J0 - 900*10^n_J0*K1_J0*V9_J8*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 - 8100*10^n_J0*KK2_J1*V9_J8*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 - 8100*10^n_J0*KK8_J7*V9_J8*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 9000*10^n_J0*K1_J0*k8_J7*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 81000*10^n_J0*KK2_J1*k8_J7*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 81000*10^n_J0*KK9_J8*k8_J7*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 10*10^(2*n_J0)*K1_J0*KK2_J1*KK8_J7*c1*(1/Ki_J0)^(2*n_J0) + 10*10^(2*n_J0)*K1_J0*KK2_J1*KK9_J8*c1*(1/Ki_J0)^(2*n_J0) + 10^(2*n_J0)*K1_J0*KK8_J7*KK9_J8*c1*(1/Ki_J0)^(2*n_J0) + 81*10^(2*n_J0)*KK2_J1*KK8_J7*KK9_J8*c1*(1/Ki_J0)^(2*n_J0) + 2*K1_J0*KK2_J1*KK8_J7*KK9_J8*c1*(10/Ki_J0)^n_J0 - 9*10^n_J0*K1_J0*KK2_J1*KK8_J7*V9_J8*n_J0*(1/Ki_J0)^n_J0 + 90*10^n_J0*K1_J0*KK2_J1*KK9_J8*k8_J7*n_J0*(1/Ki_J0)^n_J0 - 90*10^n_J0*K1_J0*KK2_J1*V9_J8*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 - 90*10^n_J0*K1_J0*KK8_J7*V9_J8*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 - 810*10^n_J0*KK2_J1*KK8_J7*V9_J8*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 900*10^n_J0*K1_J0*KK2_J1*k8_J7*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 900*10^n_J0*K1_J0*KK9_J8*k8_J7*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 8100*10^n_J0*KK2_J1*KK9_J8*k8_J7*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 10^(2*n_J0)*K1_J0*KK2_J1*KK8_J7*KK9_J8*c1*(1/Ki_J0)^(2*n_J0) - 9*10^n_J0*K1_J0*KK2_J1*KK8_J7*V9_J8*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0 + 90*10^n_J0*K1_J0*KK2_J1*KK9_J8*k8_J7*n_J0*(10/Ki_J0)^n_J0*(1/Ki_J0)^n_J0))
....................................................................................................

The remaining group of parameters, relations and the corresponding solutions:

--> Parameters: 
V6_J5
 
--> Relations: 
(V5_J4/(KK5_J4 + 10) - (10*V5_J4)/(KK5_J4 + 10)^2)*((10*V5_J4)/(KK5_J4 + 10) - (100*k4_J3)/(KK4_J3 + 10)) - c5 + ((10*k4_J3)/(KK4_J3 + 10) - (100*k4_J3)/(KK4_J3 + 10)^2)*((10*V5_J4)/(KK5_J4 + 10) - (10*V6_J5)/(KK6_J5 + 10) - (100*k4_J3)/(KK4_J3 + 10) + (2800*k3_J2)/(KK3_J2 + 280)) - (10*k4_J3*((10*V2_J1)/(KK2_J1 + 10) - (90*V1_J0)/(((10/Ki_J0)^n_J0 + 1)*(K1_J0 + 90))))/(KK4_J3 + 10)
 
--> Symbolic solution(s) of the remaining parameters: 
--> The parameter V6_J5 has the solution/solutions: 
  -((KK6_J5 + 10)*(c5 - ((10*k4_J3)/(KK4_J3 + 10) - (100*k4_J3)/(KK4_J3 + 10)^2)*((10*V5_J4)/(KK5_J4 + 10) - (100*k4_J3)/(KK4_J3 + 10) + (2800*k3_J2)/(KK3_J2 + 280)) - (V5_J4/(KK5_J4 + 10) - (10*V5_J4)/(KK5_J4 + 10)^2)*((10*V5_J4)/(KK5_J4 + 10) - (100*k4_J3)/(KK4_J3 + 10)) + (10*k4_J3*((10*V2_J1)/(KK2_J1 + 10) - (90*V1_J0)/(((10/Ki_J0)^n_J0 + 1)*(K1_J0 + 90))))/(KK4_J3 + 10)))/(10*((10*k4_J3)/(KK4_J3 + 10) - (100*k4_J3)/(KK4_J3 + 10)^2))
 
Order tableau elapsed time: 17.8296
 
***************************************
* RESULTS OF IDENTIFIABILITY ANALYSIS *
***************************************

=> THE MODEL IS STRUCTURALLY GLOBALLY IDENTIFIABLE 

Structurally globally identifiable parameters: 
  V5_J4
  V9_J8
 V10_J9
  V1_J0
  V2_J1
  V6_J5
 
Structurally locally identifiable parameters: 
 []
 
Structurally non-identifiable parameters: 
 []
 
Report results elapsed time: 0.015291
 
Total elapsed time: 23.2957
