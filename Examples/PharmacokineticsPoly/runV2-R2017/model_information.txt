**********************************************************************
* GENERATING SERIES Approach for Structural Identifiability Analysis *
**********************************************************************

Model name:     PharmacokineticsPoly
Matlab version: 9.2.0.538062 (R2017a)
Computer:       PCWIN64
Options:
                verbose: 1
         reportCompTime: 1
                 noRank: 0
            closeFigure: 1
                  store: 1
    problem_folder_path: 'D:\data\Tom\Research\GenSSI\Examples\PharmacokineticsPoly\run2'

**************
* INPUT DATA *
**************

Maximum number of derivatives for the analysis: 3

State variables (x):
  x1
  x2
  x3
  x4
 xi1
 
Vector field for autonomous dynamics (f):
                                                   - a1*(x1 - x2) - ka*vm*x1*xi1
                                                                    a2*(x1 - x2)
                                                   - b1*(x3 - x4) - kc*vm*x3*xi1
                                                                    b2*(x3 - x4)
 ka*xi1^2*(a1*(x1 - x2) + ka*vm*x1*xi1) + kc*xi1^2*(b1*(x3 - x4) + kc*vm*x3*xi1)
 
Control vector (g):
 []

Initial conditions (x0):
                          c0
                           0
                        c0*g
                           0
 1/(c0*ka + ka*kc + c0*g*kc)
 
Observables (y):
 x1
 x2
 x3
 
Parameters considered for structural identifiability analysis:
 a1
 a2
 b1
 b2
 ka
 kc
 vm
 c0
  g
 
Report inputs elapsed time: 0.07829
 
**********************************
* COMPUTATION OF LIE DERIVATIVES *
**********************************

COMPUTING LIE DERIVATIVES OF ORDER 1
.................................................................
   -> The rank of the Jacobian generated by 1 derivatives is  5.
   -> The rank of the next Jacobian is expected to be maximum 9.
.................................................................
 
 
COMPUTING LIE DERIVATIVES OF ORDER 2
   
.................................................................
   -> The rank of the Jacobian generated by 2 derivatives is  7.
   -> The rank of the next Jacobian is expected to be maximum 9.
.................................................................
 
 
COMPUTING LIE DERIVATIVES OF ORDER 3
   
.................................................................
   -> The rank of the Jacobian generated by 3 derivatives is 9.
 
Compute Lie derivatives elapsed time: 1.4879
 
******************************************
* COMPUTATION OF IDENTIFIABILITY TABLEAU *
******************************************

Rank of full Jacobian matrix: 9 
=> THE RANK OF THE FULL JACOBIAN IS COMPLETE, THUS AT LEAST LOCAL IDENTIFIABILITY IS GUARANTEED.

Compute tableau elapsed time: 3.7652
 
***************************************************
* COMPUTATION OF REDUCED IDENTIFIABILITY TABLEAUS *
***************************************************

Relations needed for computing parameters:
c0 - c1
c0*g - c2
c3 - a1*c0 - (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   a2*c0 - c4
c5 - b1*c0*g - (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc)
a1 + (ka*vm)/(c0*ka + ka*kc + c0*g*kc))*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)) - c6 + a1*a2*c0 - c0*ka*vm*((kc*(b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2 + (ka*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2)
b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc))*(b1 + (kc*vm)/(c0*ka + ka*kc + c0*g*kc)) - c7 + b1*b2*c0*g - c0*g*kc*vm*((kc*(b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2 + (ka*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2)
                 ((kc*(b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2 + (ka*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2)*(ka*vm*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)) + c0*ka*vm*(a1 + (ka*vm)/(c0*ka + ka*kc + c0*g*kc)) - c0*ka*vm*((2*kc*(b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc) + (2*ka*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc) + (c0*ka^2*vm)/(c0*ka + ka*kc + c0*g*kc)^2 + (c0*g*kc^2*vm)/(c0*ka + ka*kc + c0*g*kc)^2)) - (a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc))*((a1 + (ka*vm)/(c0*ka + ka*kc + c0*g*kc))^2 + a1*a2 - ka*vm*((kc*(b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2 + (ka*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2) - (c0*ka^2*vm*(a1 + (ka*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2) - c8 - a2*c0*(a1*a2 + a1*(a1 + (ka*vm)/(c0*ka + ka*kc + c0*g*kc)) - (a1*c0*ka^2*vm)/(c0*ka + ka\\\r\n*kc + c0*g*kc)^2) + (c0*ka*kc*vm*(b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc))*(b1 + (kc*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2 + (b1*b2*c0^2*g*ka*kc*vm)/(c0*ka + ka*kc + c0*g*kc)^2
 ((kc*(b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2 + (ka*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2)*(kc*vm*(b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc)) + c0*g*kc*vm*(b1 + (kc*vm)/(c0*ka + ka*kc + c0*g*kc)) - c0*g*kc*vm*((2*kc*(b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc) + (2*ka*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc) + (c0*ka^2*vm)/(c0*ka + ka*kc + c0*g*kc)^2 + (c0*g*kc^2*vm)/(c0*ka + ka*kc + c0*g*kc)^2)) - c9 - (b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc))*((b1 + (kc*vm)/(c0*ka + ka*kc + c0*g*kc))^2 + b1*b2 - kc*vm*((kc*(b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2 + (ka*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2) - (c0*g*kc^2*vm*(b1 + (kc*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2) - b2*c0*g*(b1*b2 + b1*(b1 + (kc*vm)/(c0*ka + ka*kc + c0*g*kc)) - (b1*c0*g*kc\\\r\n^2*vm)/(c0*ka + ka*kc + c0*g*kc)^2) + (a1*a2*c0^2*g*ka*kc*vm)/(c0*ka + ka*kc + c0*g*kc)^2 + (c0*g*ka*kc*vm*(a1 + (ka*vm)/(c0*ka + ka*kc + c0*g*kc))*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2
 
Compute reduced tableau  elapsed time: 1.7988
 
*****************************************************************************************************
* DETECTION OF (DIRECT) STRUCTURALLY GLOBALLY IDENTIFIABLE PARAMETERS AND REORGANIZATION OF TABLEAU *
*****************************************************************************************************

=> STRUCTURALLY GLOBALLY IDENTIFIABLE PARAMETERS DETERMINED DIRECTLY
   (parameters corresponding to one non-zero element in the reduced identifiability tableau)
--> The parameter c0 is structurally globally identifiable. It has the solution:
       c0 = c1.
--> The parameter g is structurally globally identifiable. It has the solution:
       g = c2/c0.
--> The parameter a2 is structurally globally identifiable. It has the solution:
       a2 = c4/c0.
=> NO STRUCTURALLY LOCALLY IDENTIFIABLE PARAMETER COULD BE DETERMINED DIRECTLY

*******************************************************************************************************
* REMAINING PARAMETERS (APART FROM IDENTIFIABLE OR NON-IDENTIFIABLE), AND THE CORRESPONDING RELATIONS * 
*******************************************************************************************************

--> Parameters: 
 a1
 b1
 b2
 ka
 kc
 vm
 
--> Relations: 
c3 - a1*c0 - (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)
c5 - b1*c0*g - (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc)
a1 + (ka*vm)/(c0*ka + ka*kc + c0*g*kc))*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)) - c6 + a1*a2*c0 - c0*ka*vm*((kc*(b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2 + (ka*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2)
b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc))*(b1 + (kc*vm)/(c0*ka + ka*kc + c0*g*kc)) - c7 + b1*b2*c0*g - c0*g*kc*vm*((kc*(b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2 + (ka*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2)
                 ((kc*(b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2 + (ka*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2)*(ka*vm*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)) + c0*ka*vm*(a1 + (ka*vm)/(c0*ka + ka*kc + c0*g*kc)) - c0*ka*vm*((2*kc*(b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc) + (2*ka*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc) + (c0*ka^2*vm)/(c0*ka + ka*kc + c0*g*kc)^2 + (c0*g*kc^2*vm)/(c0*ka + ka*kc + c0*g*kc)^2)) - (a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc))*((a1 + (ka*vm)/(c0*ka + ka*kc + c0*g*kc))^2 + a1*a2 - ka*vm*((kc*(b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2 + (ka*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2) - (c0*ka^2*vm*(a1 + (ka*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2) - c8 - a2*c0*(a1*a2 + a1*(a1 + (ka*vm)/(c0*ka + ka*kc + c0*g*kc)) - (a1*c0*ka^2*vm)/(c0*ka + ka\\\r\n*kc + c0*g*kc)^2) + (c0*ka*kc*vm*(b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc))*(b1 + (kc*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2 + (b1*b2*c0^2*g*ka*kc*vm)/(c0*ka + ka*kc + c0*g*kc)^2
 ((kc*(b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2 + (ka*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2)*(kc*vm*(b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc)) + c0*g*kc*vm*(b1 + (kc*vm)/(c0*ka + ka*kc + c0*g*kc)) - c0*g*kc*vm*((2*kc*(b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc) + (2*ka*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc) + (c0*ka^2*vm)/(c0*ka + ka*kc + c0*g*kc)^2 + (c0*g*kc^2*vm)/(c0*ka + ka*kc + c0*g*kc)^2)) - c9 - (b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc))*((b1 + (kc*vm)/(c0*ka + ka*kc + c0*g*kc))^2 + b1*b2 - kc*vm*((kc*(b1*c0*g + (c0*g*kc*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2 + (ka*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2) - (c0*g*kc^2*vm*(b1 + (kc*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2) - b2*c0*g*(b1*b2 + b1*(b1 + (kc*vm)/(c0*ka + ka*kc + c0*g*kc)) - (b1*c0*g*kc\\\r\n^2*vm)/(c0*ka + ka*kc + c0*g*kc)^2) + (a1*a2*c0^2*g*ka*kc*vm)/(c0*ka + ka*kc + c0*g*kc)^2 + (c0*g*ka*kc*vm*(a1 + (ka*vm)/(c0*ka + ka*kc + c0*g*kc))*(a1*c0 + (c0*ka*vm)/(c0*ka + ka*kc + c0*g*kc)))/(c0*ka + ka*kc + c0*g*kc)^2
 
--> Symbolic solution(s) of the remaining parameters: 
[Warning: Cannot solve symbolically. Returning a numeric approximation instead.] 
[> In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('solve', 'C:\Program Files\MATLAB\R2017a\toolbox\symbolic\symbolic\solve.m', 304)" style="font-weight:bold">solve</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2017a\toolbox\symbolic\symbolic\solve.m',304,0)">line 304</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('genssiOrderTableau>solveRemPar', 'D:\data\Tom\Research\GenSSI\Auxiliary\genssiOrderTableau.m', 660)" style="font-weight:bold">genssiOrderTableau>solveRemPar</a> (<a href="matlab: opentoline('D:\data\Tom\Research\GenSSI\Auxiliary\genssiOrderTableau.m',660,0)">line 660</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('genssiOrderTableau', 'D:\data\Tom\Research\GenSSI\Auxiliary\genssiOrderTableau.m', 219)" style="font-weight:bold">genssiOrderTableau</a> (<a href="matlab: opentoline('D:\data\Tom\Research\GenSSI\Auxiliary\genssiOrderTableau.m',219,0)">line 219</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('genssiMain', 'D:\data\Tom\Research\GenSSI\genssiMain.m', 137)" style="font-weight:bold">genssiMain</a> (<a href="matlab: opentoline('D:\data\Tom\Research\GenSSI\genssiMain.m',137,0)">line 137</a>)
  In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('runPharmacokineticsPoly', 'D:\data\Tom\Research\GenSSI\Examples\PharmacokineticsPoly\runPharmacokineticsPoly.m', 20)" style="font-weight:bold">runPharmacokineticsPoly</a> (<a href="matlab: opentoline('D:\data\Tom\Research\GenSSI\Examples\PharmacokineticsPoly\runPharmacokineticsPoly.m',20,0)">line 20</a>)] 
--> The parameter a1 has the solution/solutions: 
  0
--> The parameter b1 has the solution/solutions: 
  0
--> The parameter b2 has the solution/solutions: 
  0
--> The parameter ka has the solution/solutions: 
  0
--> The parameter kc has the solution/solutions: 
  0
--> The parameter vm has the solution/solutions: 
  0
 
Order tableau elapsed time: 5.6582
 
***************************************
* RESULTS OF IDENTIFIABILITY ANALYSIS *
***************************************

=> THE MODEL IS STRUCTURALLY GLOBALLY IDENTIFIABLE 

Structurally globally identifiable parameters: 
 c0
  g
 a2
 a1
 b1
 b2
 ka
 kc
 vm
 
Structurally locally identifiable parameters: 
 []
 
Structurally non-identifiable parameters: 
 []
 
Report results elapsed time: 0.016897
 
Total elapsed time: 12.8089
